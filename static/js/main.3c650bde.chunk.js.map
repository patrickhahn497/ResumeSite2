{"version":3,"sources":["Components/Home/Home.js","Components/Academics/Academics.js","Components/Projects/Projects.js","Components/Experience/Experience.js","Components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","className","id","onclick","href","class","Academics","Projects","Experience","Navigation","onRouteChange","isNavPanelActive","type","data-toggle","data-target","aria-expanded","onClick","App","route","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3c650bde.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = ({}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"starrybackground homecontainer \">\r\n\t        <div className=\"container \">\r\n\t          <div className=\"row\">\r\n\t            <div className=\"col-lg-12\">\r\n\t              <div id=\"content\">\r\n\t                <h1>Patrick Hahn</h1>\r\n\t                  <h3>Recent grad in Computer Science and aspiring Software Engineer</h3>\r\n\t                <hr/>\r\n\t              </div>\r\n\t            </div>\r\n\t          </div>\r\n\t          <div className=\"buttoncluster\">\r\n\t            <div className=\"row buttoncontainer\" onclick=\"window.location='./Academics.html';\">\r\n\t              <div className=\"col-lg-4\"></div>\r\n\t              <div className=\"col-lg-4 expbutton\">\r\n\t              \t<a href=\"https://www.linkedin.com/in/patrick-hahn-973291135/\">\r\n\t\t                <h3>\r\n\t\t                \t<i class=\"fa fa-linkedin\"></i>\r\n\t\t                \t&nbsp; Linkedin\r\n\t\t                </h3>\r\n\t\t            </a>\r\n\t              </div>\r\n\t              <div className=\"col-lg-4\"></div>\r\n\t            </div>\r\n\t            <div className=\"row buttoncontainer\">\r\n\t              <div className=\"col-lg-4\"></div>\r\n\t              <div className=\"col-lg-4 expbutton\">\r\n\t              {\r\n\r\n\t              \t<a href=\"https://github.com/patrickhahn497\">\r\n\t              \t\t<h3>\r\n\t              \t\t\t<i class=\"fa fa-github\"></i>\r\n\t              \t\t\t&nbsp; GitHub\r\n\t              \t\t</h3>\r\n\t              \t</a>\r\n\t              \t//<h3><span className=\"glyphicon glyphicon-wrench\" aria-hidden=\"true\"></span>  Projects</h3>\r\n\r\n\t              }\r\n\t                \r\n\t              </div>\r\n\t              <div className=\"col-lg-4\"></div>\r\n\t            </div>\r\n\t          </div>\r\n\t        </div>\r\n      \t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Academics.css';\r\n\r\nconst Academics = ({}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"midcontainer academics-container\">\r\n\t\t\t<h1> Academics</h1>\r\n\r\n\t\t\t<div id=\"degree\" className=\"block\">\r\n\t\t\t\t<h2> Bachelor's degree in Computer Science, </h2>\r\n\t\t\t\t<h2>University of California, Irvine</h2>\r\n\t\t\t\t<h3> GPA: 3.586 </h3>\r\n\t\t\t\t<h3> SAT: 2290 </h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"block\">\r\n\t\t\t\t<h2> Relevant Coursework </h2>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li> Programming in Python </li>\r\n\t\t\t\t\t<li> Programming in C++ </li>\r\n\t\t\t\t\t<li> Software Engineering </li>\r\n\t\t\t\t\t<li> Databases </li>\r\n\t\t\t\t\t<li> Data Structures</li>\r\n\t\t\t\t\t<li> Algorithm Design and Analysis </li>\r\n\t\t\t\t\t<li> Discrete Math for Computer Science </li>\r\n\t\t\t\t\t<li> Computer Networks and Security</li>\r\n\t\t\t\t\t<li> Applied Cryptography </li>\r\n\t\t\t\t\t<li> Web Applications </li>\r\n\t\t\t\t\t<li> Artificial Intelligence </li>\r\n\t\t\t\t\t<li> Machine Learning </li>\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Academics;","import React from 'react';\r\nimport './Projects.css';\r\n\r\nconst Projects = ({}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"midcontainer\">\r\n\t\t\t<h1 className=\"pagetitle\"> Projects </h1>\r\n\t\t\t<section className=\"posts\">\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">Augmented Reality First Aid App</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> Unity, C#, ARCore </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Won <b>1st place</b> at Med App Jam, a 2-week app competition where groups make medically-oriented apps </li>\r\n\t\t\t\t\t\t<li> Integrated AR to simulate different first aid scenarios and guides the user how to treat multiple ailments such as burn emergencies or cardiac arrest </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">Othello/Othello AI</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> Python, TkInter, C++ </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li> Built a fully functioning Othello game using Python with a custom-made graphical user interface. </li>\r\n\t\t\t\t\t\t<li> Later created an AI written in C++ that uses depth-first recursion in order to perform the most optimal moves to defeat an opponent.  </li>\r\n\t\t\t\t\t\t<li> AI received <b>18th place amongst 228</b> competing AIâ€™s (excluding disqualified AI) </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">Fabflix</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> MySQL, Java, HTML, CSS, Ubuntu, Tomcat </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li> Built a mock movie site similar to IMDB which uses Java servlets to communicates with a MySQL database running on an AWS instance in order to query movie information and perform simulated transactions </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">SpellBook</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> React, Javascript, HTML, CSS </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li> Created a React app which takes in user input then queries an external API in order to retrieve appropriate information about the searched DnD spell. </li>\r\n\t\t\t\t\t\t<li> Later supplemented with CharacterSheet which parses JSON objects of character information then formats it. </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">SpellChecker</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> C++ </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li> Created a spellchecker program which performs spell checks on large text files and outputs mistakes and suggestions (e.g. add a letter, remove a letter, replaces a letter) to the user </li>\r\n\t\t\t\t\t\t<li> Used data structures including binary search trees, AVL trees, and hash tables to store text and dictionary file. </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">Twitter Streamer</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\">  Apache Spark, Twitter API,  Scala </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Used Spark Streaming and Twitter API in order to stream live tweet information. </li>\r\n\t\t\t\t\t\t<li>Used Spark/Scala to provide analysis of certain data such as most common hashtag, average word length, etc. </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">HeroPortal / HeroPortal API</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\"> React, Javascript, HTML, CSS, Node.js, PostgreSQL </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li> Created a React app which allows users to create hero profiles with formatted attributes, roles, and abilities. Depending on which contracts are posted at the time, users can be recommended for the most relevant jobs </li>\r\n\t\t\t\t\t\t<li> Employers can also post jobs which request heroes of a certain role or caliber.</li>\r\n\t\t\t\t\t\t<li> Built backend using Node.js for custom API and PostgreSQL for database management</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h2 className=\"title\">Connect Four / Connect Four AI</h2>\r\n\t\t\t\t\t\t<p className=\"projecttext\">  Java </p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Built a fully functional game of Connect Four where a human player can play against an AI </li>\r\n\t\t\t\t\t\t<li>AI was built using a min-max algorithm coupled with a depth-first search to a recursion depth of 3. </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</article>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Experience.css';\r\n\r\nconst Experience = ({}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"midcontainer exppage\">\r\n\t\t\t<h1 className=\"\"> Experience </h1>\r\n\t\t\t<div className=\"exp block\">\r\n\t\t\t\t<div className=\"exptitle \">\r\n\t\t\t\t\t<h2> CoreLogic: Software Engineering Intern </h2>\r\n\t\t\t\t\t<h3 className=\"date\"> June 2019-August 2019 </h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li> Built and edited endpoints for both internal and external APIâ€™s which provided property data for users through the use of Java and Springboot </li>\r\n\t\t\t\t\t<li> Worked in a team in an extreme programming environment, incorporating practices such as test-driven development, continuous integration, and pair programming </li>\r\n\t\t\t\t\t<li> Helped build a pipeline to transfer data from Hive to Elastic </li>\r\n\t\t\t\t\t<li> Built and ran indexer jobs to query data from Hive then put them into indexes for Elasticsearch </li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"exp block top-border\">\r\n\t\t\t\t<div className=\"exptitle\">\r\n\t\t\t\t\t<h2> Magikid Robotics Lab: Instructor </h2>\r\n\t\t\t\t\t<h3> November 2018 - June 2019 </h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li> Taught childen how to build and program robots through the use of tools such as Wonder and Lego Mindstorms EV3. </li>\r\n\t\t\t\t\t<li> Taught children how to use Scratch to build animations and games. </li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"exp block top-border\">\r\n\t\t\t\t<div className=\"exptitle\">\r\n\t\t\t\t\t<h2> Infobank: Software Engineering Intern </h2>\r\n\t\t\t\t\t<h3> June 2018 - August 2018 </h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li> Used Spark dataframes in Scala to retrieve and analyze vehicle trip information stored in a Mongo database. (eg. Given coordinates, uses a geocoder to obtain the address then only returns information about a certain district) </li>\r\n\t\t\t\t\t<li> Conducted research and gathered relevant data regarding automated driving, provided translated summaries of insights to Korean co-workers with limited English comprehension. </li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Experience;","\r\nimport React from 'react';\r\n// import 'tachyons';\r\nimport CSSModules from 'react-css-modules';\r\nimport './Navigation.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Form from 'react-bootstrap/Form';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nconst Navigation = ({onRouteChange, isNavPanelActive}) => {\r\n\t//the top panel can potentiallly be made into its own component\r\n\t//if \r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\t\t<nav className=\"navbar navbar-default\">\r\n\t\t\t  <div className=\"\">\r\n\r\n\t\t\t    <div className=\"navbar-header\">\r\n\t\t\t      <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n\t\t\t        <span className=\"sr-only\">Toggle navigation</span>\r\n\t\t\t        <span className=\"icon-bar\"></span>\r\n\t\t\t        <span className=\"icon-bar\"></span>\r\n\t\t\t        <span className=\"icon-bar\"></span>\r\n\t\t\t      </button>\r\n\t\t\t      <a className=\"navbar-brand\" href=\"#\">Patrick Hahn</a>\r\n\t\t\t    </div>\r\n\r\n\r\n\t\t\t    <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n\t\t\t      <ul className=\"nav navbar-nav\">\r\n\t\t\t      \t<li className={isNavPanelActive('home')} onClick={() => onRouteChange('home')}><a href=\"\">Home</a></li>\r\n\t\t\t      \t<li className={isNavPanelActive('academics')} onClick={() => onRouteChange('academics')}><a>Academics</a></li>\r\n\t\t\t      \t<li className={isNavPanelActive('projects')} onClick={() => onRouteChange('projects')}><a>Projects</a></li>\r\n\t\t\t      \t<li className={isNavPanelActive('experience')} onClick={() => onRouteChange('experience')}><a>Experience</a></li>\r\n\t\t\t      </ul>\r\n\t\t\t      {\r\n\t\t\t      // <ul className=\"nav navbar-nav navbar-right\">\r\n\t\t\t      //   <li><a href=\"#\">Subscribe <i className=\"fa fa-user-plus\"></i></a></li>\r\n\t\t\t      // </ul>\r\n\t\t\t  \t\t}\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</nav>\r\n\t\t}\r\n\t\t{\r\n\t\t // <Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t //    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n\t\t //    <Nav className=\"mr-auto\">\r\n\t\t //      <Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t //      <Nav.Link href=\"#features\">Features</Nav.Link>\r\n\t\t //      <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n\t\t //    </Nav>\r\n\t\t //    <Form inline>\r\n\t\t //      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n\t\t //      <Button variant=\"outline-info\">Search</Button>\r\n\t\t //    </Form>\r\n\t\t //  </Navbar>\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\t// <Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t//     <Navbar.Brand onClick={() => onRouteChange('home')}>Patrick Hahn</Navbar.Brand>\r\n\t\t\t//     <Nav className=\"mr-auto\">\r\n\t\t\t//       <Nav.Link onClick={() => onRouteChange('academics')}>Academics</Nav.Link>\r\n\t\t\t//       <Nav.Link onClick={() => onRouteChange('projects')}>projects</Nav.Link>\r\n\t\t\t//       <Nav.Link onClick={() => onRouteChange('experience')}>experience</Nav.Link>\r\n\t\t\t//     </Nav>\r\n\t\t\t// </Navbar>\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Academics from './Components/Academics/Academics';\nimport Projects from './Components/Projects/Projects';\nimport Experience from './Components/Experience/Experience';\nimport Navigation from './Components/Navigation/Navigation';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n        route: \"home\"\n    };\n\n  }\n\n  onRouteChange = (route) => {\n    this.setState({route: route});\n  }\n\n  isNavPanelActive = (route) => {\n    if (this.state.route===route){\n        return \"active\";\n    }\n    return \"\";\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"\">\n      <Navigation onRouteChange={this.onRouteChange} isNavPanelActive={this.isNavPanelActive}/>\n        <div className=\"mainbody\">\n        {\n            {\n                'home': <Home/>,\n                'academics': <Academics/>,\n                'projects': <Projects/>,\n                'experience': <Experience/>\n            }[this.state.route]\n        }\n        </div>\n\n\n\n\n      {\n        // <div className=\"container\">\n        //   <div className=\"row\">\n        //     <div className=\"col-lg-12\">\n        //       <div id=\"content\">\n        //         <h1>Patrick Hahn</h1>\n        //           <h3>Recent grad in Computer Science and aspiring Software Engineer</h3>\n        //         <hr/>\n        //       </div>\n        //     </div>\n        //   </div>\n        //   <div className=\"buttoncluster\">\n        //     <div className=\"row buttoncontainer\" onclick=\"window.location='./Academics.html';\">\n        //       <div className=\"col-lg-4\"></div>\n        //       <div className=\"col-lg-4 expbutton\">\n        //         <h3><span className=\"glyphicon glyphicon-education\" aria-hidden=\"true\"></span>  Academics</h3>\n        //       </div>\n        //       <div className=\"col-lg-4\"></div>\n        //     </div>\n        //     <div className=\"row buttoncontainer\">\n        //       <div className=\"col-lg-4\"></div>\n        //       <div className=\"col-lg-4 expbutton\">\n        //         <h3><span className=\"glyphicon glyphicon-wrench\" aria-hidden=\"true\"></span>  Projects</h3>\n        //       </div>\n        //       <div className=\"col-lg-4\"></div>\n        //     </div>\n\n        //     <div className=\"row buttoncontainer\" onclick=\"window.location='./Experience.html';\">\n        //       <div className=\"col-lg-4\"></div>\n        //       <div className=\"col-lg-4 expbutton\">\n        //         <h3><span className=\"glyphicon glyphicon-camera\" aria-hidden=\"true\"></span>  Professional Experience</h3>\n        //       </div>\n        //       <div className=\"col-lg-4\"></div>\n        //     </div>\n        //   </div>\n        // </div>\n      }\n      </div>\n    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}